% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solveExtendedODE.R
\name{solveExtendedODE}
\alias{solveExtendedODE}
\title{C++ extended ODE solve wraper}
\usage{
solveExtendedODE(u, mkt, K0, K1, l0, l1, H1, jmp, mf = 22,
  rtol = 1e-12, atol = 1e-30, N.factors = 3,
  jumpTransform = getPointerToJumpTransform(fstr =
  "expNormJumpTransform"), ...)
}
\arguments{
\item{u}{u \code{Ux(N.factors+1)} matrix of complex numbers}

\item{mkt}{data.frame describing the market structure (times to maturity, interest rate, dividend yield, current stock price). See Details in \code{\link{jumpDiffusionODEs}}.}

\item{K0, K1, l0, l1, H1}{output from \code{\link{ODEstructs}}, for details see DPS (2000).}

\item{jmp}{jump parameters, element of \code{params} list from \code{\link{jumpDiffusionODEs}}.}

\item{mf, rtol, atol}{ODE solution precision parameters, see \code{\link{jumpDiffusionODEs}}.}

\item{N.factors}{number of stochastic volatility factors.}

\item{jumpTransform}{string, name of jump transform type.}
}
\value{
3-dim array of ODE solutions. Size: \code{N x T x 4*(N.factors+1)}
}
\description{
This function passes the ODE parameters, in a specification defined via \code{\link{ODEstructs}}, to the C++ solution routines.
}
\details{
This is an internal function not intended for the user.
}
